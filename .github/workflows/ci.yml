name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  qa:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade setuptools tox
      - name: Run linting tests
        run: |
          tox -e lint

  # skipping windows for now, it fails:
  # https://github.com/tlambert03/napari-omero/runs/804849289?check_suite_focus=true#step:6:62
  # https://github.com/numpy/numpy/issues/15537
  # https://github.com/tox-dev/tox-conda/issues/37
  test:
    name: ${{ matrix.platform }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7]

    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1.6.0
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt install libxkbcommon-x11-0
          /sbin/start-stop-daemon --start --quiet \
            --pidfile /tmp/custom_xvfb_99.pid --make-pidfile \
            --background --exec /usr/bin/Xvfb \
            -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools tox tox-conda tox-gh-actions
      - name: Test with tox
        shell: bash -l {0}
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}
      - name: Codecov
        if: matrix.platform == 'ubuntu-latest' && matrix.python-version == '3.7'
        uses: "codecov/codecov-action@v1"
        with:
          fail_ci_if_error: true

  deploy:
    needs: [qa, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pep517
      - name: Build Distribution
        run: python -m pep517.build .
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') }}
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
