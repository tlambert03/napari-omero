name: CI

on:
  push:
    branches: [main]
    tags: ["v*"] # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest

  test:
    name: ${{ matrix.platform }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        python-version: ["3.9", "3.10"]
        backend: [PyQt5]

    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          python-version: ${{ matrix.python-version }}

      - uses: pyvista/setup-headless-display-action@v3
        with:
          qt: true

      - name: Install dependencies
        run: |
          conda install omero-py
          python -m pip install --upgrade pip
          python -m pip install .[test]
          python -m pip install ${{ matrix.backend }}

      - name: Test
        run: pytest --color=yes --cov=napari_omero --cov-report=xml

      - name: Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    needs: [test]
    if: success() && startsWith(github.ref, 'refs/tags/') && github.repository == 'tlambert03/napari-omero'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üë∑ Build
        run: |
          python -m pip install build
          python -m build

      - name: üö¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: './dist/*'
